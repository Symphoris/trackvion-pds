/*
 * Generated by the Jasper component of Apache Tomcat
 * Version: Apache Tomcat/9.0.24
 * Generated at: 2020-02-19 13:46:18 UTC
 * Note: The last modified time of this file was set to
 *       the last modified time of the source file after
 *       generation to assist with modification tracking.
 */
package org.apache.jsp.WEB_002dINF;

import javax.servlet.*;
import javax.servlet.http.*;
import javax.servlet.jsp.*;

public final class notification_jsp extends org.apache.jasper.runtime.HttpJspBase
    implements org.apache.jasper.runtime.JspSourceDependent,
                 org.apache.jasper.runtime.JspSourceImports {

  private static final javax.servlet.jsp.JspFactory _jspxFactory =
          javax.servlet.jsp.JspFactory.getDefaultFactory();

  private static java.util.Map<java.lang.String,java.lang.Long> _jspx_dependants;

  private static final java.util.Set<java.lang.String> _jspx_imports_packages;

  private static final java.util.Set<java.lang.String> _jspx_imports_classes;

  static {
    _jspx_imports_packages = new java.util.HashSet<>();
    _jspx_imports_packages.add("javax.servlet");
    _jspx_imports_packages.add("javax.servlet.http");
    _jspx_imports_packages.add("javax.servlet.jsp");
    _jspx_imports_classes = null;
  }

  private volatile javax.el.ExpressionFactory _el_expressionfactory;
  private volatile org.apache.tomcat.InstanceManager _jsp_instancemanager;

  public java.util.Map<java.lang.String,java.lang.Long> getDependants() {
    return _jspx_dependants;
  }

  public java.util.Set<java.lang.String> getPackageImports() {
    return _jspx_imports_packages;
  }

  public java.util.Set<java.lang.String> getClassImports() {
    return _jspx_imports_classes;
  }

  public javax.el.ExpressionFactory _jsp_getExpressionFactory() {
    if (_el_expressionfactory == null) {
      synchronized (this) {
        if (_el_expressionfactory == null) {
          _el_expressionfactory = _jspxFactory.getJspApplicationContext(getServletConfig().getServletContext()).getExpressionFactory();
        }
      }
    }
    return _el_expressionfactory;
  }

  public org.apache.tomcat.InstanceManager _jsp_getInstanceManager() {
    if (_jsp_instancemanager == null) {
      synchronized (this) {
        if (_jsp_instancemanager == null) {
          _jsp_instancemanager = org.apache.jasper.runtime.InstanceManagerFactory.getInstanceManager(getServletConfig());
        }
      }
    }
    return _jsp_instancemanager;
  }

  public void _jspInit() {
  }

  public void _jspDestroy() {
  }

  public void _jspService(final javax.servlet.http.HttpServletRequest request, final javax.servlet.http.HttpServletResponse response)
      throws java.io.IOException, javax.servlet.ServletException {

    if (!javax.servlet.DispatcherType.ERROR.equals(request.getDispatcherType())) {
      final java.lang.String _jspx_method = request.getMethod();
      if ("OPTIONS".equals(_jspx_method)) {
        response.setHeader("Allow","GET, HEAD, POST, OPTIONS");
        return;
      }
      if (!"GET".equals(_jspx_method) && !"POST".equals(_jspx_method) && !"HEAD".equals(_jspx_method)) {
        response.setHeader("Allow","GET, HEAD, POST, OPTIONS");
        response.sendError(HttpServletResponse.SC_METHOD_NOT_ALLOWED, "Les JSPs ne permettent que GET, POST ou HEAD. Jasper permet aussi OPTIONS");
        return;
      }
    }

    final javax.servlet.jsp.PageContext pageContext;
    javax.servlet.http.HttpSession session = null;
    final javax.servlet.ServletContext application;
    final javax.servlet.ServletConfig config;
    javax.servlet.jsp.JspWriter out = null;
    final java.lang.Object page = this;
    javax.servlet.jsp.JspWriter _jspx_out = null;
    javax.servlet.jsp.PageContext _jspx_page_context = null;


    try {
      response.setContentType("text/html; charset=ISO-8859-1");
      pageContext = _jspxFactory.getPageContext(this, request, response,
      			null, true, 8192, true);
      _jspx_page_context = pageContext;
      application = pageContext.getServletContext();
      config = pageContext.getServletConfig();
      session = pageContext.getSession();
      out = pageContext.getOut();
      _jspx_out = out;

      out.write("\r\n");
      out.write("<!DOCTYPE html>\r\n");
      out.write("<html>\r\n");
      out.write("<head>\r\n");
      out.write("<link href=\"/tv/common/styleMain.css\" rel=\"stylesheet\">\r\n");
      out.write("<link href=\"/tv/common/notification.css\" rel=\"stylesheet\">\r\n");
      out.write("<link rel=\"stylesheet\"\r\n");
      out.write("\thref=\"https://cdnjs.cloudflare.com/ajax/libs/font-awesome/4.7.0/css/font-awesome.min.css\">\r\n");
      out.write("<link rel=\"icon\" type=\"image/png\" href=\"/tv/pictures/icon.png\">\r\n");
      out.write("<script type=\"text/javascript\" src=\"/tv/script/includeHTML.js\"></script>\r\n");
      out.write("<script type=\"text/javascript\" src=\"/tv/script/toggleMenu.js\"></script>\r\n");
      out.write("<title>TrackVision</title>\r\n");
      out.write("</head>\r\n");
      out.write("\r\n");
      out.write("<body>\r\n");
      out.write("\r\n");
      out.write("\t<div w3-include-html=\"/tv/common/");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${menu}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write(".html\"></div>\r\n");
      out.write("\t\r\n");
      out.write("<a href=\"/tv/health\" class=\"button-refresh\">Return</a>\r\n");
      out.write("<a href=\"/tv/notification\" class=\"button-refresh\">Refresh</a>\r\n");
      out.write("<h1>Notifications</h1>\r\n");
      out.write("<p>Click on the \"x\" symbol to close the alert message.</p>\r\n");
      out.write("\r\n");
      out.write("<div id=\"main\">\r\n");
      out.write(" <div id=\"menu\">\r\n");
      out.write("\r\n");
      out.write("    <div   class=\"alert\">\r\n");
      out.write("  <span class=\"closebtn\">&times;</span>  \r\n");
      out.write("  <strong>Danger!</strong> Indicates a dangerous or potentially negative action.\r\n");
      out.write("</div>\r\n");
      out.write("\r\n");
      out.write("    <div class=\"alert success\">\r\n");
      out.write("  <span class=\"closebtn\">&times;</span>  \r\n");
      out.write("  <strong>Success!</strong> Indicates a successful or positive action.\r\n");
      out.write("</div>\r\n");
      out.write("    <div class=\"alert info\">\r\n");
      out.write("  <span class=\"closebtn\">&times;</span>  \r\n");
      out.write("  <strong>Info!</strong> Indicates a neutral informative change or action.\r\n");
      out.write("</div>\r\n");
      out.write("\r\n");
      out.write("<div class=\"alert warning\">\r\n");
      out.write("  <span class=\"closebtn\">&times;</span>  \r\n");
      out.write("  <strong>Warning!</strong> Indicates a warning that might need attention.\r\n");
      out.write("</div> \r\n");
      out.write("\r\n");
      out.write("<div class=\"alert warning\">\r\n");
      out.write("  <span class=\"closebtn\">&times;</span>  \r\n");
      out.write("  <strong>Warning!</strong> Indicates a warning that might need attention.\r\n");
      out.write("</div> \r\n");
      out.write("\r\n");
      out.write("<div class=\"alert warning\">\r\n");
      out.write("  <span class=\"closebtn\">&times;</span>  \r\n");
      out.write("  <strong>Warning!</strong> Indicates a warning that might need attention.\r\n");
      out.write("</div> \r\n");
      out.write("  </div>\r\n");
      out.write("  \r\n");
      out.write("  \r\n");
      out.write(" <h1>Alert and Resident Details </h1>\r\n");
      out.write("  <div id=\"contenu\">\r\n");
      out.write("  Alert : \r\n");
      out.write("\r\n");
      out.write("  \r\n");
      out.write("  \r\n");
      out.write("  \r\n");
      out.write(" </div>\r\n");
      out.write("</div>  \r\n");
      out.write("\r\n");
      out.write("    \r\n");
      out.write("<script>\r\n");
      out.write("var close = document.getElementsByClassName(\"closebtn\");\r\n");
      out.write("var i;\r\n");
      out.write("\r\n");
      out.write("for (i = 0; i < close.length; i++) {\r\n");
      out.write("  close[i].onclick = function(){\r\n");
      out.write("    var div = this.parentElement;\r\n");
      out.write("    div.style.opacity = \"0\";\r\n");
      out.write("    setTimeout(function(){ div.style.display = \"none\"; }, 600);\r\n");
      out.write("  }\r\n");
      out.write("}\r\n");
      out.write("</script>\r\n");
      out.write("\r\n");
      out.write("<div class=\"notify\">\r\n");
      out.write("    <div class=\"notify1\">\r\n");
      out.write("  <p>Je suis une notification. Je vais disparare! Phasellus elit nunc, tristique sed sodales sit amet, tincidunt sed.</p>\r\n");
      out.write("  </div>\r\n");
      out.write("  \r\n");
      out.write("      <div class=\"notify1\">\r\n");
      out.write("  <p>Je suis une notificates sit amet, tincidunt sed.</p>\r\n");
      out.write("  <small>11 mins ago</small>\r\n");
      out.write("  </div>\r\n");
      out.write("  </div>\r\n");
      out.write("  \r\n");
      out.write("  <script src=\"https://ajax.googleapis.com/ajax/libs/jquery/1.12.4/jquery.min.js\"></script>\r\n");
      out.write(" <script src=\"/tv/script/notification.js\"></script>\r\n");
      out.write("\r\n");
      out.write("<div id=\"footer\">\r\n");
      out.write("\t<div w3-include-html=\"/tv/common/footer.html\"></div>\r\n");
      out.write("\r\n");
      out.write("\t<script>\r\n");
      out.write("\t\tincludeHTML();\r\n");
      out.write("\t</script>\r\n");
      out.write("\r\n");
      out.write("</div>\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("</body>\r\n");
      out.write("\r\n");
      out.write("</html>");
    } catch (java.lang.Throwable t) {
      if (!(t instanceof javax.servlet.jsp.SkipPageException)){
        out = _jspx_out;
        if (out != null && out.getBufferSize() != 0)
          try {
            if (response.isCommitted()) {
              out.flush();
            } else {
              out.clearBuffer();
            }
          } catch (java.io.IOException e) {}
        if (_jspx_page_context != null) _jspx_page_context.handlePageException(t);
        else throw new ServletException(t);
      }
    } finally {
      _jspxFactory.releasePageContext(_jspx_page_context);
    }
  }
}
